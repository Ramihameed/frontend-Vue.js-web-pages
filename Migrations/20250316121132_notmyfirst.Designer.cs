// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_3.Data;

#nullable disable

namespace Test_3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250316121132_notmyfirst")]
    partial class notmyfirst
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Test_3.Models.Car2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Car2");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "Toyota",
                            price = 20000,
                            type = "1"
                        },
                        new
                        {
                            Id = 2,
                            name = "Honda",
                            price = 22000,
                            type = "2"
                        },
                        new
                        {
                            Id = 3,
                            name = "Ford",
                            price = 18000,
                            type = "3"
                        });
                });

            modelBuilder.Entity("Test_3.Models.CarSpecifics", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CarSpecifics");
                });

            modelBuilder.Entity("Test_3.Models.wheels", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("pressure")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("wheels");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Toyota",
                            pressure = 2000f
                        },
                        new
                        {
                            id = 2,
                            name = "Honda",
                            pressure = 2200f
                        },
                        new
                        {
                            id = 3,
                            name = "Ford",
                            pressure = 1800f
                        });
                });

            modelBuilder.Entity("cars", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int>("price")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.HasKey("Id");

                    b.ToTable("cars");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            name = "Toyota",
                            price = 20000
                        },
                        new
                        {
                            Id = 2L,
                            name = "Honda",
                            price = 22000
                        },
                        new
                        {
                            Id = 3L,
                            name = "Ford",
                            price = 18000
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
